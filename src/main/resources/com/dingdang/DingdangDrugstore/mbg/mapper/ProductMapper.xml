<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingdang.DingdangDrugstore.mbg.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.dingdang.DingdangDrugstore.mbg.model.Product">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_sn" jdbcType="VARCHAR" property="productSn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="product_category_id" jdbcType="INTEGER" property="productCategoryId" />
    <result column="product_category_name" jdbcType="VARCHAR" property="productCategoryName" />
    <result column="sub_title" jdbcType="VARCHAR" property="subTitle" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
    <result column="sale" jdbcType="INTEGER" property="sale" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="low_stock" jdbcType="INTEGER" property="lowStock" />
    <result column="publish_status" jdbcType="BIT" property="publishStatus" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dingdang.DingdangDrugstore.mbg.model.Product">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="album_pics" jdbcType="LONGVARCHAR" property="albumPics" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_sn, name, type, brand_id, brand_name, product_category_id, product_category_name, 
    sub_title, pic, price, original_price, sale, stock, low_stock, publish_status, keywords
  </sql>
  <sql id="Blob_Column_List">
    description, album_pics
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dingdang.DingdangDrugstore.mbg.model.ProductExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dingdang.DingdangDrugstore.mbg.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product
    where 1 = 1
    <if test="type != null">
      and `type` = #{type}
    </if>
    <if test="brandId != null">
      and brand_id = #{brandId}
    </if>
    <if test="productCategoryId != null">
      and product_category_id = #{productCategoryId}
    </if>
    <if test="name != null and name != ''">
      and `name` = #{name}
    </if>
  </select>

  <select id="selectByQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product
    where `name` LIKE CONCAT(CONCAT('%', #{query}), '%')
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dingdang.DingdangDrugstore.mbg.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dingdang.DingdangDrugstore.mbg.model.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (product_sn, name, type, 
      brand_id, brand_name, product_category_id, 
      product_category_name, sub_title, pic, 
      price, original_price, sale, 
      stock, low_stock, publish_status, 
      keywords, description, album_pics
      )
    values (#{productSn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{brandId,jdbcType=INTEGER}, #{brandName,jdbcType=VARCHAR}, #{productCategoryId,jdbcType=INTEGER}, 
      #{productCategoryName,jdbcType=VARCHAR}, #{subTitle,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{originalPrice,jdbcType=DECIMAL}, #{sale,jdbcType=INTEGER}, 
      #{stock,jdbcType=INTEGER}, #{lowStock,jdbcType=INTEGER}, #{publishStatus,jdbcType=BIT}, 
      #{keywords,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{albumPics,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dingdang.DingdangDrugstore.mbg.model.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productSn != null">
        product_sn,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="productCategoryId != null">
        product_category_id,
      </if>
      <if test="productCategoryName != null">
        product_category_name,
      </if>
      <if test="subTitle != null">
        sub_title,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="sale != null">
        sale,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="lowStock != null">
        low_stock,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="albumPics != null">
        album_pics,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productSn != null">
        #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="productCategoryId != null">
        #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="productCategoryName != null">
        #{productCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="sale != null">
        #{sale,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=BIT},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="albumPics != null">
        #{albumPics,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dingdang.DingdangDrugstore.mbg.model.ProductExample" resultType="java.lang.Integer">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productSn != null">
        product_sn = #{record.productSn,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.brandName != null">
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.productCategoryId != null">
        product_category_id = #{record.productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.productCategoryName != null">
        product_category_name = #{record.productCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.subTitle != null">
        sub_title = #{record.subTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.originalPrice != null">
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sale != null">
        sale = #{record.sale,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.lowStock != null">
        low_stock = #{record.lowStock,jdbcType=INTEGER},
      </if>
      <if test="record.publishStatus != null">
        publish_status = #{record.publishStatus,jdbcType=BIT},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.albumPics != null">
        album_pics = #{record.albumPics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product
    set id = #{record.id,jdbcType=BIGINT},
      product_sn = #{record.productSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      product_category_id = #{record.productCategoryId,jdbcType=INTEGER},
      product_category_name = #{record.productCategoryName,jdbcType=VARCHAR},
      sub_title = #{record.subTitle,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      sale = #{record.sale,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      low_stock = #{record.lowStock,jdbcType=INTEGER},
      publish_status = #{record.publishStatus,jdbcType=BIT},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      album_pics = #{record.albumPics,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=BIGINT},
      product_sn = #{record.productSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      product_category_id = #{record.productCategoryId,jdbcType=INTEGER},
      product_category_name = #{record.productCategoryName,jdbcType=VARCHAR},
      sub_title = #{record.subTitle,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      sale = #{record.sale,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      low_stock = #{record.lowStock,jdbcType=INTEGER},
      publish_status = #{record.publishStatus,jdbcType=BIT},
      keywords = #{record.keywords,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dingdang.DingdangDrugstore.mbg.model.Product">
    update product
    <set>
      <if test="productSn != null">
        product_sn = #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="productCategoryId != null">
        product_category_id = #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="productCategoryName != null">
        product_category_name = #{productCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        sub_title = #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="sale != null">
        sale = #{sale,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        low_stock = #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=BIT},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="albumPics != null">
        album_pics = #{albumPics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dingdang.DingdangDrugstore.mbg.model.Product">
    update product
    set product_sn = #{productSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      brand_name = #{brandName,jdbcType=VARCHAR},
      product_category_id = #{productCategoryId,jdbcType=INTEGER},
      product_category_name = #{productCategoryName,jdbcType=VARCHAR},
      sub_title = #{subTitle,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      sale = #{sale,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      low_stock = #{lowStock,jdbcType=INTEGER},
      publish_status = #{publishStatus,jdbcType=BIT},
      keywords = #{keywords,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      album_pics = #{albumPics,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dingdang.DingdangDrugstore.mbg.model.Product">
    update product
    set product_sn = #{productSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      brand_name = #{brandName,jdbcType=VARCHAR},
      product_category_id = #{productCategoryId,jdbcType=INTEGER},
      product_category_name = #{productCategoryName,jdbcType=VARCHAR},
      sub_title = #{subTitle,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      sale = #{sale,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      low_stock = #{lowStock,jdbcType=INTEGER},
      publish_status = #{publishStatus,jdbcType=BIT},
      keywords = #{keywords,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>